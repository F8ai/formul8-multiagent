name: Deploy Formul8 Agents

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # Test all agents before deployment
  test-agents:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          cd lambda-package && npm install
          for agent in agents/*/; do
            cd "$agent" && npm install && cd ../..
          done
      
      - name: Run agent tests
        run: |
          # Test main agent
          cd lambda-package
          npm test || echo "No tests configured for main agent"
          
          # Test individual agents
          for agent in ../agents/*/; do
            echo "Testing $agent"
            cd "$agent"
            npm test || echo "No tests configured for $agent"
            cd ../..
          done
      
      - name: Validate agent configurations
        run: |
          node scripts/validate-agent-configs.js
      
      - name: Check agent health
        run: |
          node scripts/check-agent-health.js

  # Deploy main agent
  deploy-main-agent:
    needs: test-agents
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy main agent to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./lambda-package
          vercel-args: '--prod'

  # Deploy individual agents
  deploy-agents:
    needs: test-agents
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        agent: [
          'compliance-agent',
          'formulation-agent',
          'operations-agent',
          'marketing-agent',
          'sourcing-agent',
          'patent-agent',
          'spectra-agent',
          'customer-success-agent',
          'f8-slackbot',
          'mcr-agent',
          'ad-agent',
          'editor-agent'
        ]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy ${{ matrix.agent }} to Vercel
        run: |
          cd agents/${{ matrix.agent }}
          vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

  # Post-deployment validation
  validate-deployment:
    needs: [deploy-main-agent, deploy-agents]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for deployments
        run: sleep 30
      
      - name: Test main agent health
        run: |
          curl -f https://lambda-package.vercel.app/health || exit 1
      
      - name: Test agent endpoints
        run: |
          # Test free API key generation
          curl -f https://lambda-package.vercel.app/api/free-key || exit 1
          
          # Test agent health endpoints
          for agent in compliance-agent formulation-agent operations-agent; do
            echo "Testing $agent health"
            curl -f "https://$agent.vercel.app/health" || echo "Warning: $agent health check failed"
          done
      
      - name: Update deployment status
        run: |
          echo "âœ… All agents deployed successfully!"
          echo "Main Agent: https://lambda-package.vercel.app"
          echo "Free API Key: https://lambda-package.vercel.app/api/free-key"