name: Rotate OpenRouter API Key

# Schedule: Run monthly on the 1st at 2 AM UTC
on:
  schedule:
    - cron: '0 2 1 * *'  # Monthly at 2 AM UTC on the 1st
  workflow_dispatch:  # Allow manual trigger
    inputs:
      delete_old_keys:
        description: 'Delete old keys after rotation (default: true)'
        required: false
        default: true
        type: boolean
      skip_cleanup:
        description: 'Skip cleanup of old keys (override default behavior)'
        required: false
        default: false
        type: boolean

jobs:
  rotate-key:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install -g vercel
      
      - name: Configure Vercel
        run: |
          echo "Installing Vercel..."
          vercel --version
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
      - name: Rotate OpenRouter API Key
        env:
          OPENROUTER_PROVISIONING_KEY: ${{ secrets.OPENROUTER_PROVISIONING_KEY }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          chmod +x scripts/openrouter-key-manager.js
          
          # Determine if we should delete old keys
          # Default behavior: delete old keys (unless explicitly disabled)
          DELETE_OLD="true"
          if [ "${{ github.event.inputs.skip_cleanup }}" = "true" ]; then
            DELETE_OLD="false"
            echo "‚ö†Ô∏è  Skipping cleanup of old keys (manual override)"
          elif [ "${{ github.event.inputs.delete_old_keys }}" = "false" ]; then
            DELETE_OLD="false"
            echo "‚ö†Ô∏è  Skipping cleanup of old keys (manual setting)"
          else
            echo "‚úÖ Will clean up old keys after successful rotation (keeping immediate previous key)"
          fi
          
          # Run rotation with appropriate cleanup setting
          if [ "$DELETE_OLD" = "true" ]; then
            echo "üîÑ Starting key rotation with cleanup..."
            node scripts/openrouter-key-manager.js rotate --delete-old
          else
            echo "üîÑ Starting key rotation without cleanup..."
            node scripts/openrouter-key-manager.js rotate
          fi
      
      - name: Verify new key is working
        env:
          OPENROUTER_PROVISIONING_KEY: ${{ secrets.OPENROUTER_PROVISIONING_KEY }}
        run: |
          echo "üîç Verifying new key is working..."
          node scripts/openrouter-key-manager.js test
          echo "‚úÖ New key verification completed"
      
      - name: List current keys
        env:
          OPENROUTER_PROVISIONING_KEY: ${{ secrets.OPENROUTER_PROVISIONING_KEY }}
        run: |
          echo "üìã Current API keys:"
          node scripts/openrouter-key-manager.js list
      
      - name: Upload rotation log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rotation-log-${{ github.run_number }}
          path: logs/
          retention-days: 90
      
      - name: Trigger Chat Deployment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üöÄ Triggering chat deployment with new API key...');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-chat.yml',
              ref: 'main'
            });
            console.log('‚úÖ Chat deployment triggered successfully');

      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Key rotation completed successfully!"
          echo "üîÑ New key created and deployed"
          echo "üóëÔ∏è  Old keys cleaned up (keeping immediate previous key)"
          echo "üîí Security rotation completed safely"
          echo "üöÄ Chat deployment triggered with new key"
          # Add your notification logic here (Slack, Discord, email, etc.)
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Key rotation failed! Check the logs."
          echo "‚ö†Ô∏è  Old keys may still be active - manual intervention required"
          # Add your notification logic here (Slack, Discord, email, etc.)



