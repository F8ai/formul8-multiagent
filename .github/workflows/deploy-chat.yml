name: Deploy Chat Interface

on:
  push:
    branches:
      - main
    paths:
      - 'chat.html'
      - 'lambda.js'
      - 'vercel.json'
      - 'public/future4200.html'
      - 'lambda-package/public/future4200.html'
      - 'baseline.json'
      - '.github/workflows/deploy-chat.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update version info with commit ID
        run: |
          COMMIT_ID=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M")
          sed -i "s/v1\.0\.0-COMMIT_ID/v1.0.0-${COMMIT_ID} (${TIMESTAMP})/" chat.html
          echo "‚úÖ Updated version to: v1.0.0-${COMMIT_ID} (${TIMESTAMP})"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Set OpenRouter API Key in Vercel
        run: |
          echo "üîê Setting OPENROUTER_API_KEY in Vercel..."
          # Remove existing variable if it exists, then add new one
          vercel env rm OPENROUTER_API_KEY production --token=${{ secrets.VERCEL_TOKEN }} --yes || true
          echo "$OPENROUTER_API_KEY" | vercel env add OPENROUTER_API_KEY production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      - name: Deploy to Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Verify Deployment
        run: |
          echo "‚úÖ Chat interface deployed!"
          echo "üîó Chat: https://chat.formul8.ai/"
          echo "üîó Future4200: https://chat.formul8.ai/future4200.html"
          echo "üìä Commit: $(git rev-parse --short HEAD)"

      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            const commitId = context.sha.substring(0, 7);
            const timestamp = new Date().toISOString();
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `‚úÖ Chat interface deployed!\n\nüîó Chat: https://chat.formul8.ai/\nüîó Future4200: https://chat.formul8.ai/future4200.html\nüìä Version: v1.0.0-${commitId}\n‚è∞ ${timestamp}`
            })
