name: Monitor OpenRouter Usage

# Schedule: Run every 6 hours to monitor for suspicious activity
on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:  # Allow manual trigger
    inputs:
      alert_threshold:
        description: 'Risk score threshold for alerts (default: 20)'
        required: false
        default: '20'
        type: string
      monitoring_period:
        description: 'Monitoring period in hours (default: 24)'
        required: false
        default: '24'
        type: string

jobs:
  monitor-usage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Monitor OpenRouter Usage
        env:
          OPENROUTER_PROVISIONING_KEY: ${{ secrets.OPENROUTER_PROVISIONING_KEY }}
        run: |
          chmod +x scripts/openrouter-usage-monitor.js
          node scripts/openrouter-usage-monitor.js monitor
      
      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports-${{ github.run_number }}
          path: security-reports/
          retention-days: 90
      
      - name: Upload monitoring logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-logs-${{ github.run_number }}
          path: logs/
          retention-days: 30
      
      - name: Check for high-risk activity
        id: risk-check
        env:
          OPENROUTER_PROVISIONING_KEY: ${{ secrets.OPENROUTER_PROVISIONING_KEY }}
        run: |
          # Run monitoring and capture output
          OUTPUT=$(node scripts/openrouter-usage-monitor.js monitor 2>&1)
          echo "$OUTPUT"
          
          # Extract risk score from output
          RISK_SCORE=$(echo "$OUTPUT" | grep "Risk Score:" | sed 's/.*Risk Score: \([0-9]*\).*/\1/' || echo "0")
          echo "risk_score=$RISK_SCORE" >> $GITHUB_OUTPUT
          
          # Check if risk score exceeds threshold
          THRESHOLD=${{ github.event.inputs.alert_threshold || '20' }}
          if [ "$RISK_SCORE" -gt "$THRESHOLD" ]; then
            echo "high_risk=true" >> $GITHUB_OUTPUT
            echo "üö® HIGH RISK DETECTED: Risk score $RISK_SCORE exceeds threshold $THRESHOLD"
          else
            echo "high_risk=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Risk level acceptable: $RISK_SCORE"
          fi
      
      - name: Alert on high-risk activity
        if: steps.risk-check.outputs.high_risk == 'true'
        run: |
          echo "üö® SECURITY ALERT: High-risk activity detected!"
          echo "Risk Score: ${{ steps.risk-check.outputs.risk_score }}"
          echo "Threshold: ${{ github.event.inputs.alert_threshold || '20' }}"
          echo ""
          echo "Immediate actions recommended:"
          echo "1. Review the security report in artifacts"
          echo "2. Check for unauthorized key usage"
          echo "3. Consider rotating affected keys"
          echo "4. Investigate suspicious activity patterns"
          echo ""
          # Add your notification logic here (Slack, Discord, email, etc.)
          # Example: curl -X POST -H 'Content-type: application/json' --data '{"text":"üö® OpenRouter Security Alert: High-risk activity detected!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Notify on success
        if: success() && steps.risk-check.outputs.high_risk == 'false'
        run: |
          echo "‚úÖ Usage monitoring completed successfully"
          echo "Risk Score: ${{ steps.risk-check.outputs.risk_score }}"
          echo "Status: Normal monitoring - no immediate action required"
          # Add your notification logic here for normal operations
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Usage monitoring failed!"
          echo "Check the logs and ensure OPENROUTER_PROVISIONING_KEY is valid"
          # Add your notification logic here for failures