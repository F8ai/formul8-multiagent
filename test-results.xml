<testsuites id="" name="" tests="84" failures="30" skipped="54" errors="0" time="5.579846000000001">
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="chromium" tests="14" failures="5" skipped="9" time="0" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [chromium] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [chromium] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [chromium] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [chromium] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [chromium] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="firefox" tests="14" failures="5" skipped="9" time="0" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [firefox] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [firefox] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [firefox] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [firefox] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [firefox] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="webkit" tests="14" failures="5" skipped="9" time="0" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [webkit] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [webkit] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [webkit] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [webkit] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [webkit] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="Mobile Chrome" tests="14" failures="5" skipped="9" time="0" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [Mobile Chrome] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [Mobile Chrome] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [Mobile Chrome] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [Mobile Chrome] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [Mobile Chrome] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="Mobile Safari" tests="14" failures="5" skipped="9" time="0" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [Mobile Safari] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [Mobile Safari] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [Mobile Safari] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [Mobile Safari] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [Mobile Safari] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="chatgpt-comparison.spec.js" timestamp="2025-10-14T03:23:02.074Z" hostname="chatgpt-comparison" tests="14" failures="5" skipped="9" time="0.001" errors="0">
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design" classname="chatgpt-comparison.spec.js" time="0.001">
<failure message="chatgpt-comparison.spec.js:16:3 should have ChatGPT-like visual design" type="FAILURE">
<![CDATA[  [chatgpt-comparison] › chatgpt-comparison.spec.js:16:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like visual design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like welcome screen" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should handle API key setup like ChatGPT" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:98:3 should have ChatGPT-like message flow" type="FAILURE">
<![CDATA[  [chatgpt-comparison] › chatgpt-comparison.spec.js:98:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message flow 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like input behavior" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message styling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:215:3 should have ChatGPT-like responsive design" type="FAILURE">
<![CDATA[  [chatgpt-comparison] › chatgpt-comparison.spec.js:215:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like responsive design 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like error handling" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like status indicators" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:290:3 should have ChatGPT-like message formatting" type="FAILURE">
<![CDATA[  [chatgpt-comparison] › chatgpt-comparison.spec.js:290:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like message formatting 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like example prompt interactions" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like loading states" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior" classname="chatgpt-comparison.spec.js" time="0">
<failure message="chatgpt-comparison.spec.js:377:3 should have ChatGPT-like scroll behavior" type="FAILURE">
<![CDATA[  [chatgpt-comparison] › chatgpt-comparison.spec.js:377:3 › F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like scroll behavior 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       9 |       data: { username: 'chatgpt-comparison-test' }
      10 |     });
    > 11 |     expect(response.status()).toBe(200);
         |                               ^
      12 |     const data = await response.json();
      13 |     freeApiKey = data.apiKey;
      14 |   });
        at /Users/danielmcshan/GitHub/formul8-multiagent/tests/chatgpt-comparison.spec.js:11:31
]]>
</failure>
</testcase>
<testcase name="F8 Chat vs ChatGPT Interface Comparison › should have ChatGPT-like accessibility features" classname="chatgpt-comparison.spec.js" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>